- name: Get VPC from Kubernetes Cluster
  ec2_vpc_net_facts:
    profile: "{{ profile }}"
    filters:
      "tag:Name": "{{ cluster_name }}"
  register: kubernetes_vpc

- name: Get default VPC
  ec2_vpc_net_facts:
    profile: "{{ profile }}"
    filters:
      "isDefault": "true"
  register: default_vpc

- name: Create VPC peering Connection
  ec2_vpc_peer:
    region: "{{ region }}"
    profile: "{{ profile }}"
    vpc_id: "{{ default_vpc.vpcs[0].vpc_id }}"
    peer_vpc_id: "{{ kubernetes_vpc.vpcs[0].vpc_id }}"
    state: present
  register: vpc_peer

- name: Accept VPC peering request
  ec2_vpc_peer:
    region: "{{ region }}"
    profile: "{{ profile }}"
    peering_id: "{{ vpc_peer.peering_id }}"
    state: accept
  register: action_peer

- name: Get default IGW
  ec2_vpc_igw:
    profile: "{{ profile }}"
    region: "{{ region }}"
    vpc_id: "{{ default_vpc.vpcs[0].vpc_id }}"
    state: present
  register: default_igw

- name: Gather Kubernetes IGW
  ec2_vpc_igw_facts:
    region: "{{ region }}"
    profile: "{{ profile }}"
    filters:
      "tag:Name": "{{ cluster_name }}"
  register: kubernetes_igw

- name: Get Kubernetes VPC route table
  ec2_vpc_route_table_facts:
    profile: "{{ profile }}"
    region: "{{ region }}"
    filters:
      "route.gateway-id": "{{ kubernetes_igw.internet_gateways[0].internet_gateway_id }}"
      vpc-id: "{{ kubernetes_vpc.vpcs[0].vpc_id }}"
      "tag:Name": "{{ cluster_name }}"
  register: kubernetes_vpc_route_table

- name: Get default VPC route table
  ec2_vpc_route_table_facts:
    profile: "{{ profile }}"
    region: "{{ region }}"
    filters:
      "association.main": "true"
      vpc-id: "{{ default_vpc.vpcs[0].vpc_id }}"
  register: default_vpc_route_table

- name: Modifying route table of Kubernetes VPC
  ec2_vpc_route_table:
    vpc_id: "{{ kubernetes_vpc.vpcs[0].vpc_id }}"
    region: "{{ region }}"
    profile: "{{ profile }}"
    route_table_id: "{{ kubernetes_vpc_route_table.route_tables[0].associations[0].route_table_id }}"
    routes:
      - dest: "{{ default_vpc.vpcs[0].cidr_block }}"
        vpc_peering_connection_id: "{{ vpc_peer.peering_id }}"
      - dest: 0.0.0.0/0
        gateway_id: "{{ kubernetes_igw.internet_gateways[0].internet_gateway_id }}"
    lookup: id

- name: Modifying route table of default VPC
  ec2_vpc_route_table:
    vpc_id: "{{ default_vpc.vpcs[0].vpc_id }}"
    region: "{{ region }}"
    profile: "{{ profile }}"
    route_table_id: "{{ default_vpc_route_table.route_tables[0].associations[0].route_table_id }}"
    routes:
      - dest: "{{ kubernetes_vpc.vpcs[0].cidr_block }}"
        vpc_peering_connection_id: "{{ vpc_peer.peering_id }}"
      - dest: 0.0.0.0/0
        gateway_id: "{{ default_igw.gateway_id }}"
    lookup: id

- name: Creating security group for RDS
  ec2_group:
    name: rds_security_group
    description: security group for RDS
    vpc_id: "{{ default_vpc.vpcs[0].vpc_id }}"
    profile: "{{ profile }}"
    region: "{{ region }}"
    rules:
      - proto: tcp
        ports:
          - 3306
        cidr_ip: "{{ kubernetes_vpc.vpcs[0].cidr_block }}"
        rule_desc: Access to Kubernetes VPC for 3306
      - proto: tcp
        ports:
          - 3306
        cidr_ip: "{{ default_vpc.vpcs[0].cidr_block }}"
        rule_desc: Access to default VPC for 3306
  register: rds_security_group

- name: Create RDS
  rds:
    command: create
    profile: "{{ profile }}"
    region: "{{ region }}"
    instance_name: mysql-database
    db_engine: MySQL
    db_name: csye7200
    size: "10"
    backup_retention: 0
    instance_type: db.t2.micro
    username: root
    password: 1nsecure
    publicly_accessible: "False"
    # wait: yes
    # wait_timeout: 600
    vpc_security_groups: "{{ rds_security_group.group_id }}"
  async: 500
  poll: 0
